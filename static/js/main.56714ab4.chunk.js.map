{"version":3,"sources":["GameReady.js","Game.js","App.js","registerServiceWorker.js","index.js"],"names":["gameType","startTime","newGameFunction","numberList","id","onClick","bind","this","Game","Component","props","state","countDown","problem","tick","handleClick","createRandomProblem","timer","setInterval","setState","endGameHandler","clearInterval","updateScoreFunction","type","random1","Math","floor","random","random2","score","className","ChooseType","clickHandler","event","preventDefault","chooseTypeFunction","Congratulations","href","Steps","step","updateScore","newGame","GameReady","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.56714ab4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default function ({ gameType, startTime, numberList, newGameFunction }) {\r\n  return (\r\n    <div>\r\n      <h3>{gameType}</h3>\r\n      <p>{startTime} seconds.</p>\r\n      <p>Are you ready?</p>\r\n      <button id=\"btn\" onClick={newGameFunction.bind(this, 2)}>\r\n        Go\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass SelectNumberList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectValue: this.props.numberList,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ selectValue: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    let options = [\"All\", 1, 2, 3, 4, 5, 6, 7, 8, 9].map((item) => (\r\n      <option value={item}>{item}</option>\r\n    ));\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <p>\r\n          {this.props.numberList.length === 9\r\n            ? \"Using all numbers combinations\"\r\n            : \"Using numbers: \" + this.props.numberList.join(\",\")}\r\n        </p>\r\n        <label>\r\n          Numbers to test:\r\n          <select value={this.state.selectValue} onChange={this.handleChange}>\r\n            {options}\r\n          </select>\r\n        </label>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countDown: this.props.startTime,\r\n      problem: \"\",\r\n    };\r\n    this.tick = this.tick.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.createRandomProblem = this.createRandomProblem.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.tick, 1000);\r\n    this.createRandomProblem(this.props.gameType);\r\n  }\r\n\r\n  tick() {\r\n    if (this.state.countDown > 0) {\r\n      this.setState({ countDown: this.state.countDown - 1 });\r\n    } else {\r\n      this.props.endGameHandler();\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  handleClick() {\r\n    this.props.updateScoreFunction();\r\n    this.createRandomProblem(this.props.gameType);\r\n  }\r\n\r\n  createRandomProblem(type) {\r\n    const max = 10;\r\n    let random1 = Math.floor(Math.random() * 5) + 5;\r\n    let random2 = Math.floor(Math.random() * max) + 1;\r\n    var problem = \"\";\r\n\r\n    switch (type) {\r\n      case \"ADDITION\":\r\n        problem = random1 + \" + \" + random2;\r\n        break;\r\n      case \"SUBTRACTION\":\r\n        if (random1 >= random2) {\r\n          problem = random1 + 1 + \" - \" + random2;\r\n        } else {\r\n          problem = random2 + 8 + \" - \" + random1;\r\n        }\r\n        break;\r\n      case \"MULTIPLICATION\":\r\n        problem = random1 + \" x \" + random2;\r\n        break;\r\n      case \"DIVISION\":\r\n        let dividend = random1 * random2;\r\n        problem = dividend + \" / \" + random1;\r\n        break;\r\n      default:\r\n        problem = \"type is NOT defined. createRandomProblem()\";\r\n    }\r\n\r\n    this.setState({ problem: problem });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"counter\">Time: {this.state.countDown} secs</div>\r\n        <div id=\"counter\">Score: {this.props.score}</div>\r\n        <div className=\"number\">{this.state.problem}</div>\r\n        <button id=\"btn\" onClick={this.handleClick}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport GameReady from \"./GameReady\";\r\nimport Game from \"./Game\";\r\nimport \"./App.css\";\r\n\r\nclass ChooseType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler(type, event) {\r\n    event.preventDefault();\r\n    this.props.chooseTypeFunction(type);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"setup\">\r\n        <button onClick={this.clickHandler.bind(this, \"ADDITION\")}>\r\n          Addition\r\n        </button>\r\n        <button onClick={this.clickHandler.bind(this, \"SUBTRACTION\")}>\r\n          Subtraction\r\n        </button>\r\n        <button onClick={this.clickHandler.bind(this, \"MULTIPLICATION\")}>\r\n          Multiplication\r\n        </button>\r\n        <button onClick={this.clickHandler.bind(this, \"DIVISION\")}>\r\n          Division\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Congratulations = ({ score, newGameFunction }) => {\r\n  return (\r\n    <div>\r\n      <h2>Congratulations</h2>\r\n      <h3>\r\n        Your scored: <strong>{score}</strong>\r\n      </h3>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <button id=\"btn\" onClick={newGameFunction.bind(this, 1)}>\r\n        Play again\r\n      </button>\r\n      <br />\r\n      <a onClick={newGameFunction.bind(this, 0)} href=\"#\">\r\n        Go to Start...\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Steps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      step: 0,\r\n      gameType: \"\",\r\n      score: 0,\r\n      numberList: [1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    };\r\n    this.endGameHandler = this.endGameHandler.bind(this);\r\n    this.chooseTypeFunction = this.chooseTypeFunction.bind(this);\r\n    this.updateScore = this.updateScore.bind(this);\r\n    this.newGame = this.newGame.bind(this);\r\n  }\r\n\r\n  endGameHandler() {\r\n    this.setState({ step: 3 });\r\n  }\r\n\r\n  chooseTypeFunction(gameType) {\r\n    this.setState({ gameType: gameType, step: 1 });\r\n  }\r\n\r\n  updateScore() {\r\n    this.setState({ score: this.state.score + 1 });\r\n  }\r\n\r\n  newGame(step) {\r\n    this.setState({ score: 0 });\r\n    this.setState({ step });\r\n  }\r\n\r\n  render() {\r\n    const startTime = 90;\r\n\r\n    switch (this.state.step) {\r\n      case 0:\r\n        return <ChooseType chooseTypeFunction={this.chooseTypeFunction} />;\r\n\r\n      case 1:\r\n        return (\r\n          <GameReady\r\n            gameType={this.state.gameType}\r\n            startTime={startTime}\r\n            numberList={this.state.numberList}\r\n            newGameFunction={this.newGame}\r\n          />\r\n        );\r\n\r\n      case 2:\r\n        return (\r\n          <Game\r\n            gameType={this.state.gameType}\r\n            startTime={startTime}\r\n            endGameHandler={this.endGameHandler}\r\n            score={this.state.score}\r\n            numberList={this.state.numberList}\r\n            updateScoreFunction={this.updateScore}\r\n          />\r\n        );\r\n\r\n      case 3:\r\n        return (\r\n          <Congratulations\r\n            score={this.state.score}\r\n            newGameFunction={this.newGame}\r\n          />\r\n        );\r\n\r\n      default:\r\n        return <p>Step not defined: App</p>;\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Happy Maths</h1>\r\n        <Steps />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}